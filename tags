#! /usr/bin/perl

# Print a list of "non-bad" release tags from the git repo, along with the
# date each one was created.
#
# A release tag is defined as a tag of the form "vN.S", where N is nonnegative
# integer and S is an abitrary string.  This allows for tags like the following:
# 
#     v4.0
#     v4.0rc1
#     v4.0.1
#     v4.0alpha
#     v4.0.alpha
# 
# but not the following
# 
#     alpha-4.0
#     beta-2
#
# A "bad" release tag is a release tag "vN.S" for which there is a
# separate tag on the same commit named "vN.S-bad".
#
# Usage:
#
#     tags [-a]
#
#     If "-a" is present, show all tags, including even bad ones.

$options = {};
while ($arg = shift) {
    if ($arg eq "-a") {
        $options->{all} = 1;
    } else {
        die "unrecognized option: $arg\n";
    }
}

my @releases = get_release_tags($options);
foreach $release (@releases) {
    printf("%5s %10s    %-30s\n",
           $release->{bad} ? "(BAD)" : "",
           $release->{tag},
           $release->{date}
        );
}

sub get_release_tags {
    #
    # This function returns a list giving the tag name and release
    # date of every release in the repository, where by a "release",
    # we mean a commit tagged with a tag of the form vN.S, where N is
    # an integer and S is an arbitrary string, and which is not also
    # tagged with a tag of the form vN.S-bad.
    # 
    # This function works by running a git command that generates output like
    # the following, and scanning that output for tags of the form vN.S:
    # 
    # 2012-12-03 22:10:36 -0500  (HEAD, v1.3, origin/master, origin/HEAD, master)
    # 2012-11-15 16:56:52 -0500  (v1.2)
    # 2012-10-12 16:14:30 -0400  (v1.1)
    # 2012-09-26 08:53:47 -0400  (v1.0)
    # 2012-05-04 15:48:24 -0400 
    #
    # This function returns a list of hashrefs; each hash has the keys 'tag'
    # and 'date'.  Example usage:
    #
    #     my @releases = get_release_tags();
    #     foreach $release (@releases) {
    #         printf("%10s    %s\n", $release->{tag}, $release->{date});
    #     }
    #
    my $options = shift;
    my $all = ($options && $options->{all});
    my $ts, $tags;
    @releases = ();
    open(GIT, "git log --tags --simplify-by-decoration --pretty=\"format:\%ai \%d\" | sort |");
    while (chomp(my $line = <GIT>)) {
        if ( ($ts, $tagstring) = ($line =~ m|^\s*([^\(]+)\s+\((.*)\)$|) ) {
            # store all the tags for this commit in the %tags hash
            my %tags = ();
            foreach my $tag (split(/\s*,\s*/, $tagstring)) {
                $tag =~ s/^tag:\s+//;
                $tags{$tag} = 1;
            }
            # run though all the tags in the %tags hash, looking for ones
            # of the form vN.S, where S is a string not ending in '-bad',
            # and for which there isn't also a tag of the form vN.S-bad,
            # unless $options->{all} was specified, in which we do include it.
            foreach $tag (keys(%tags)) {
                if ($tag =~ m|^v\d+\.\S+$| && $tag !~ /-bad$/ && ($all || !$tags{"${tag}-bad"})) {
                    push(@releases, { 'tag' => $tag, 'date' => $ts, 'bad' => $tags{"${tag}-bad"} });
                }
            }
        }
    }
    close(GIT);
    return @releases;
}

